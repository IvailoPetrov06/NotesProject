{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { formatDate } from \"./util\";\nimport { addEvent } from \"./EventService\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar EventForm = function (_Component) {\n  _inherits(EventForm, _Component);\n\n  var _super = _createSuper(EventForm);\n\n  function EventForm() {\n    var _this;\n\n    _classCallCheck(this, EventForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      title: \"\",\n      date: Date.now(),\n      description: \"\",\n      showDatePicker: false\n    };\n\n    _this.handleChangeTitle = function (value) {\n      _this.setState({\n        title: value\n      });\n    };\n\n    _this.handleChangeDescription = function (value) {\n      _this.setState({\n        description: value\n      });\n    };\n\n    _this.handleDatePress = function () {\n      _this.setState({\n        showDatePicker: true\n      });\n    };\n\n    _this.handleDatePickerHide = function () {\n      _this.setState({\n        showDatePicker: false\n      });\n    };\n\n    _this.handleDatePicked = function (event, selectedDate) {\n      var currentDate = selectedDate || _this.state.date;\n\n      _this.setState({\n        date: currentDate\n      });\n\n      _this.handleDatePickerHide();\n    };\n\n    return _this;\n  }\n\n  _createClass(EventForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        children: [_jsx(TextInput, {\n          style: styles.textInput,\n          placeholder: \"\\u0418\\u043C\\u0435 \\u043D\\u0430 \\u0443\\u0447\\u0435\\u043D\\u0438\\u043A\\u0430\",\n          value: this.state.title,\n          onChangeText: this.handleChangeTitle\n        }), _jsx(TextInput, {\n          style: styles.textInput,\n          placeholder: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u043D\\u0430 \\u0443\\u0447\\u0435\\u043D\\u0438\\u043A\\u0430\",\n          value: this.state.description,\n          onChangeText: this.handleChangeDescription\n        }), _jsx(Button, {\n          title: \"\\u0434\\u043E\\u0431\\u0430\\u0432\\u0438\",\n          onPress: function onPress() {\n            addEvent({\n              title: _this2.state.title,\n              date: formatDate(_this2.state.date),\n              description: _this2.state.description\n            }).then(function () {\n              return _this2.props.navigation.navigate('ThankYou');\n            });\n          }\n        })]\n      });\n    }\n  }]);\n\n  return EventForm;\n}(Component);\n\nexport default EventForm;\nvar styles = StyleSheet.create({\n  textInput: {\n    backgroundColor: \"white\",\n    padding: 10,\n    marginTop: 10,\n    marginBottom: 10\n  }\n});","map":{"version":3,"sources":["D:/Упражнения 9 клас/Мобилни приложения/NotesProject/EventForm.js"],"names":["React","Component","DateTimePicker","formatDate","addEvent","EventForm","state","title","date","Date","now","description","showDatePicker","handleChangeTitle","value","setState","handleChangeDescription","handleDatePress","handleDatePickerHide","handleDatePicked","event","selectedDate","currentDate","styles","textInput","then","props","navigation","navigate","StyleSheet","create","backgroundColor","padding","marginTop","marginBottom"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAEA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,SAASC,UAAT;AACA,SAASC,QAAT;;;;IAEMC,S;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,IAAI,EAAEC,IAAI,CAACC,GAAL,EAFA;AAGNC,MAAAA,WAAW,EAAE,EAHP;AAINC,MAAAA,cAAc,EAAE;AAJV,K;;UAORC,iB,GAAoB,UAACC,KAAD,EAAW;AAC7B,YAAKC,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAEO;AAAT,OAAd;AACD,K;;UAEDE,uB,GAA0B,UAACF,KAAD,EAAW;AACnC,YAAKC,QAAL,CAAc;AAAEJ,QAAAA,WAAW,EAAEG;AAAf,OAAd;AACD,K;;UAEDG,e,GAAkB,YAAM;AACtB,YAAKF,QAAL,CAAc;AAAEH,QAAAA,cAAc,EAAE;AAAlB,OAAd;AACD,K;;UAEDM,oB,GAAuB,YAAM;AAC3B,YAAKH,QAAL,CAAc;AAAEH,QAAAA,cAAc,EAAE;AAAlB,OAAd;AACD,K;;UAEDO,gB,GAAmB,UAACC,KAAD,EAAQC,YAAR,EAAyB;AAC1C,UAAMC,WAAW,GAAGD,YAAY,IAAI,MAAKf,KAAL,CAAWE,IAA/C;;AACA,YAAKO,QAAL,CAAc;AAACP,QAAAA,IAAI,EAAEc;AAAP,OAAd;;AACA,YAAKJ,oBAAL;AACD,K;;;;;;;WAED,kBAAS;AAAA;;AACP,aACE,MAAC,IAAD;AAAA,mBACE,KAAC,SAAD;AACE,UAAA,KAAK,EAAEK,MAAM,CAACC,SADhB;AAEE,UAAA,WAAW,EAAC,4EAFd;AAGE,UAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWC,KAHpB;AAIE,UAAA,YAAY,EAAE,KAAKM;AAJrB,UADF,EAOE,KAAC,SAAD;AACE,UAAA,KAAK,EAAEU,MAAM,CAACC,SADhB;AAEE,UAAA,WAAW,EAAC,wFAFd;AAGE,UAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWK,WAHpB;AAIE,UAAA,YAAY,EAAE,KAAKK;AAJrB,UAPF,EAaE,KAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,sCAAd;AAAuB,UAAA,OAAO,EAC1B,mBAAM;AACJZ,YAAAA,QAAQ,CAAC;AACPG,cAAAA,KAAK,EAAE,MAAI,CAACD,KAAL,CAAWC,KADX;AAEPC,cAAAA,IAAI,EAAEL,UAAU,CAAC,MAAI,CAACG,KAAL,CAAWE,IAAZ,CAFT;AAGPG,cAAAA,WAAW,EAAE,MAAI,CAACL,KAAL,CAAWK;AAHjB,aAAD,CAAR,CAKCc,IALD,CAKM;AAAA,qBAAM,MAAI,CAACC,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,UAA/B,CAAN;AAAA,aALN;AAMD;AARL,UAbF;AAAA,QADF;AA0BD;;;;EAzDqB3B,S;;AA2DxB,eAAeI,SAAf;AAEA,IAAMkB,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,eAAe,EAAE,OADR;AAETC,IAAAA,OAAO,EAAE,EAFA;AAGTC,IAAAA,SAAS,EAAE,EAHF;AAITC,IAAAA,YAAY,EAAE;AAJL;AADoB,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, Button, TextInput, StyleSheet } from \"react-native\";\r\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\r\nimport { formatDate } from './util';\r\nimport { addEvent } from \"./EventService\";\r\n\r\nclass EventForm extends Component {\r\n  state = {\r\n    title: \"\",\r\n    date: Date.now(),\r\n    description: \"\",\r\n    showDatePicker: false\r\n  };\r\n\r\n  handleChangeTitle = (value) => {\r\n    this.setState({ title: value });\r\n  };\r\n\r\n  handleChangeDescription = (value) => {\r\n    this.setState({ description: value });\r\n  };\r\n\r\n  handleDatePress = () => {\r\n    this.setState({ showDatePicker: true });\r\n  };\r\n\r\n  handleDatePickerHide = () => {\r\n    this.setState({ showDatePicker: false });\r\n  };\r\n\r\n  handleDatePicked = (event, selectedDate) => {\r\n    const currentDate = selectedDate || this.state.date;\r\n    this.setState({date: currentDate});\r\n    this.handleDatePickerHide();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View>\r\n        <TextInput\r\n          style={styles.textInput}\r\n          placeholder=\"Име на ученика\"\r\n          value={this.state.title}\r\n          onChangeText={this.handleChangeTitle}\r\n        />\r\n        <TextInput\r\n          style={styles.textInput}\r\n          placeholder=\"Номер на ученика\"\r\n          value={this.state.description}\r\n          onChangeText={this.handleChangeDescription}\r\n        />\r\n        <Button title=\"добави\" onPress={\r\n            () => {\r\n              addEvent({\r\n                title: this.state.title,\r\n                date: formatDate(this.state.date),\r\n                description: this.state.description\r\n              })\r\n              .then(() => this.props.navigation.navigate('ThankYou'));\r\n            }\r\n        } />\r\n      </View>\r\n    );\r\n  }\r\n}\r\nexport default EventForm;\r\n\r\nconst styles = StyleSheet.create({\r\n  textInput: {\r\n    backgroundColor: \"white\",\r\n    padding: 10,\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}