{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport moment from 'moment';\nimport uuid from 'uuid';\nvar BASE_URL = 'https://notesproject-56e1.restdb.io/rest/notes';\nvar ABSENCES_URL = \"https://notesproject-56e1.restdb.io/rest/absence\";\nvar API_KEY = '62a4a6a21a51777906aff956';\nexport function getEvents() {\n  return fetch(BASE_URL, {\n    method: 'GET',\n    headers: {\n      'content-type': 'application/json',\n      'x-apikey': API_KEY\n    }\n  }).then(function (response) {\n    return response.json();\n  }).then(function (events) {\n    return events.map(function (item) {\n      return _objectSpread(_objectSpread({}, item), {}, {\n        date: moment(item.date, \"DD/MM/YYYY HH:mm\").toDate()\n      });\n    });\n  });\n}\nexport function getEventById(id) {\n  return fetch(BASE_URL + \"/\" + id, {\n    method: 'GET',\n    headers: {\n      'content-type': 'application/json',\n      'x-apikey': API_KEY\n    }\n  }).then(function (response) {\n    return response.json();\n  }).then(function (item) {\n    return _objectSpread(_objectSpread({}, item), {}, {\n      date: moment(item.date, \"DD/MM/YYYY HH:mm\").toDate()\n    });\n  }).catch(function (error) {\n    return console.error(error);\n  });\n}\nexport function addEvent(_ref) {\n  var title = _ref.title,\n      date = _ref.date,\n      description = _ref.description;\n  return fetch(BASE_URL, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n      'x-apikey': API_KEY\n    },\n    body: JSON.stringify({\n      title: title,\n      date: date,\n      description: description,\n      absences: []\n    })\n  }).then(function (result) {\n    return result.json();\n  }).catch(function (error) {\n    return console.error(error);\n  });\n}\nexport function editEvent(_ref2) {\n  var id = _ref2.id,\n      title = _ref2.title,\n      date = _ref2.date,\n      description = _ref2.description;\n  return fetch(BASE_URL + \"/\" + id, {\n    method: 'PUT',\n    headers: {\n      'content-type': 'application/json',\n      'x-apikey': API_KEY\n    },\n    body: JSON.stringify({\n      title: title,\n      date: date,\n      description: description\n    })\n  }).then(function (result) {\n    return result.json();\n  }).catch(function (error) {\n    return console.error(error);\n  });\n}\nexport function deleteEvent(id) {\n  return fetch(BASE_URL + \"/\" + id, {\n    method: 'DELETE',\n    headers: {\n      'content-type': 'application/json',\n      'x-apikey': API_KEY\n    }\n  }).then(function (result) {\n    return result.json();\n  }).catch(function (error) {\n    return console.error(error);\n  });\n}\nexport function addAbsence(_ref3) {\n  var id = _ref3.id,\n      date = _ref3.date,\n      description = _ref3.description;\n  return fetch(BASE_URL + \"/\" + id, {\n    method: 'PUT',\n    headers: {\n      'content-type': 'application/json',\n      'x-apikey': API_KEY\n    },\n    body: JSON.stringify({\n      $push: {\n        absences: {\n          date: date,\n          description: description,\n          excused: false\n        }\n      }\n    })\n  }).then(function (result) {\n    return result.json();\n  }).catch(function (error) {\n    return console.error(error);\n  });\n}\nexport function changeAbsence(_ref4) {\n  var studentId = _ref4.studentId,\n      date = _ref4.date,\n      description = _ref4.description,\n      excused = _ref4.excused;\n  return fetch(BASE_URL + \"/\" + studentId, {\n    method: 'PUT',\n    headers: {\n      'content-type': 'application/json',\n      'x-apikey': API_KEY\n    },\n    body: JSON.stringify({\n      $pull: {\n        absences: {\n          date: date,\n          description: description,\n          excused: !excused\n        }\n      },\n      $push: {\n        absences: {\n          date: date,\n          description: description,\n          excused: excused\n        }\n      }\n    })\n  }).then(function (result) {\n    return result.json();\n  }).catch(function (error) {\n    return console.error(error);\n  });\n}","map":{"version":3,"sources":["D:/Упражнения 9 клас/Мобилни приложения/NotesProject/EventService.js"],"names":["moment","uuid","BASE_URL","ABSENCES_URL","API_KEY","getEvents","fetch","method","headers","then","response","json","events","map","item","date","toDate","getEventById","id","catch","error","console","addEvent","title","description","body","JSON","stringify","absences","result","editEvent","deleteEvent","addAbsence","$push","excused","changeAbsence","studentId","$pull"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\nimport uuid from 'uuid';\r\n\r\nconst BASE_URL = 'https://notesproject-56e1.restdb.io/rest/notes';\r\nconst ABSENCES_URL = \"https://notesproject-56e1.restdb.io/rest/absence\";\r\nconst API_KEY = '62a4a6a21a51777906aff956';\r\n\r\nexport function getEvents() {\r\n    return fetch(BASE_URL,\r\n        {\r\n            method: 'GET',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'x-apikey': API_KEY\r\n            }\r\n        }\r\n    )\r\n        .then(response => response.json())\r\n        .then(events => events.map(item => ({\r\n            ...item,\r\n            date: moment(item.date, \"DD/MM/YYYY HH:mm\").toDate(),\r\n        })));\r\n}\r\n\r\nexport function getEventById(id) {\r\n    return fetch(`${BASE_URL}/${id}`,\r\n        {\r\n            method: 'GET',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'x-apikey': API_KEY\r\n            }\r\n        }\r\n    )\r\n        .then(response => response.json())\r\n        .then(item => {\r\n            return {\r\n                ...item,\r\n                date: moment(item.date, \"DD/MM/YYYY HH:mm\").toDate()\r\n            }\r\n        })\r\n        .catch(error => console.error(error));\r\n}\r\n\r\n\r\nexport function addEvent({ title, date, description }) {\r\n    return fetch(BASE_URL,\r\n        {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'x-apikey': API_KEY\r\n            },\r\n            body: JSON.stringify({\r\n                title, date, description, absences: []\r\n            })\r\n        })\r\n        .then(result => result.json())\r\n        .catch(error => console.error(error));\r\n}\r\n\r\nexport function editEvent({ id, title, date, description }) {\r\n    return fetch(`${BASE_URL}/${id}`,\r\n        {\r\n            method: 'PUT',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'x-apikey': API_KEY\r\n            },\r\n            body: JSON.stringify({\r\n                title, date, description\r\n            })\r\n        })\r\n        .then(result => result.json())\r\n        .catch(error => console.error(error));\r\n}\r\n\r\nexport function deleteEvent(id) {\r\n    return fetch(`${BASE_URL}/${id}`,\r\n        {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'x-apikey': API_KEY\r\n            }\r\n        })\r\n        .then(result => result.json())\r\n        .catch(error => console.error(error));\r\n}\r\nexport function addAbsence({ id, date, description }) {\r\n    return fetch(`${BASE_URL}/${id}`,\r\n        {\r\n            method: 'PUT',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'x-apikey': API_KEY\r\n            },\r\n            body: JSON.stringify({\r\n                $push: {\r\n                    absences: {\r\n                        date: date,\r\n                        description: description,\r\n                        excused: false\r\n                    }\r\n                }\r\n            })\r\n        })\r\n        .then(result => result.json())\r\n        .catch(error => console.error(error));\r\n}\r\nexport function changeAbsence({ studentId, date, description, excused }) {  \r\n    return fetch(`${BASE_URL}/${studentId}`,\r\n        {\r\n            method: 'PUT',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'x-apikey': API_KEY\r\n            },\r\n            body: JSON.stringify({\r\n                $pull: {\r\n                    absences: {\r\n                        date: date,\r\n                        description: description,\r\n                        excused: !excused\r\n                    },\r\n                },\r\n                $push: {\r\n                    absences: {\r\n                        date: date,\r\n                        description: description,\r\n                        excused: excused\r\n                    },\r\n                },\r\n            })\r\n        })\r\n        .then(result => result.json())\r\n        .catch(error => console.error(error));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}