{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar db = require(\"./db\");\n\nvar EventForm = function (_Component) {\n  _inherits(EventForm, _Component);\n\n  var _super = _createSuper(EventForm);\n\n  function EventForm() {\n    var _this;\n\n    _classCallCheck(this, EventForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      name: \"\",\n      number: 0\n    };\n\n    _this.handleChangeName = function (value) {\n      _this.setState({\n        name: value\n      });\n    };\n\n    _this.handleChangeNumber = function (value) {\n      _this.setState({\n        number: parseInt(value)\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EventForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        children: [_jsx(TextInput, {\n          placeholder: \"Student Name\",\n          value: this.state.name,\n          onChangeText: this.handleChangeName\n        }), _jsx(TextInput, {\n          placeholder: \"Student Name\",\n          value: this.state.number,\n          onChangeText: this.handleChangeNumber\n        }), _jsx(Button, {\n          title: \"Add\",\n          onPress: function onPress() {\n            return db.AddStudent(_this2.state.name, _this2.state.number).then(function () {\n              return _this2.props.navigation.goBack();\n            });\n          }\n        })]\n      });\n    }\n  }]);\n\n  return EventForm;\n}(Component);\n\nexport default EventForm;","map":{"version":3,"sources":["D:/Упражнения 9 клас/Мобилни приложения/NotesProject/StudentForm.js"],"names":["React","Component","TextInput","db","require","EventForm","state","name","number","handleChangeName","value","setState","handleChangeNumber","parseInt","AddStudent","then","props","navigation","goBack"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,SAASC,SAAT,QAA0B,8BAA1B;;;;AAEA,IAAMC,EAAE,GAAGC,OAAO,QAAlB;;IAEMC,S;;;;;;;;;;;;;;;UACFC,K,GAAO;AACHC,MAAAA,IAAI,EAAE,EADH;AAEHC,MAAAA,MAAM,EAAE;AAFL,K;;UAIPC,gB,GAAmB,UAACC,KAAD,EAAW;AAC1B,YAAKC,QAAL,CAAc;AAACJ,QAAAA,IAAI,EAAEG;AAAP,OAAd;AACH,K;;UACDE,kB,GAAqB,UAACF,KAAD,EAAW;AAC5B,YAAKC,QAAL,CAAc;AAACH,QAAAA,MAAM,EAAEK,QAAQ,CAACH,KAAD;AAAjB,OAAd;AACH,K;;;;;;;WACD,kBAAS;AAAA;;AACL,aACI,MAAC,IAAD;AAAA,mBACI,KAAC,SAAD;AAAW,UAAA,WAAW,EAAC,cAAvB;AAAsC,UAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,IAAxD;AAA8D,UAAA,YAAY,EAAE,KAAKE;AAAjF,UADJ,EAEI,KAAC,SAAD;AAAW,UAAA,WAAW,EAAC,cAAvB;AAAsC,UAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,MAAxD;AAAgE,UAAA,YAAY,EAAE,KAAKI;AAAnF,UAFJ,EAGI,KAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,KAAd;AAAoB,UAAA,OAAO,EAAE;AAAA,mBAAMT,EAAE,CAACW,UAAH,CAAc,MAAI,CAACR,KAAL,CAAWC,IAAzB,EAA+B,MAAI,CAACD,KAAL,CAAWE,MAA1C,EAAkDO,IAAlD,CAAuD;AAAA,qBAAM,MAAI,CAACC,KAAL,CAAWC,UAAX,CAAsBC,MAAtB,EAAN;AAAA,aAAvD,CAAN;AAAA;AAA7B,UAHJ;AAAA,QADJ;AAOH;;;;EAnBmBjB,S;;AAqBxB,eAAeI,SAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {View, Button} from 'react-native';\r\nimport { TextInput } from 'react-native-gesture-handler';\r\n\r\nconst db = require('./db');\r\n\r\nclass EventForm extends Component {\r\n    state= {\r\n        name: \"\",\r\n        number: 0\r\n    }\r\n    handleChangeName = (value) => {\r\n        this.setState({name: value})\r\n    }\r\n    handleChangeNumber = (value) => {\r\n        this.setState({number: parseInt(value)})\r\n    }\r\n    render() {\r\n        return (\r\n            <View>\r\n                <TextInput placeholder='Student Name' value={this.state.name} onChangeText={this.handleChangeName}></TextInput>\r\n                <TextInput placeholder='Student Name' value={this.state.number} onChangeText={this.handleChangeNumber}></TextInput>\r\n                <Button title='Add' onPress={() => db.AddStudent(this.state.name, this.state.number).then(() => this.props.navigation.goBack())}/>\r\n            </View>\r\n        );\r\n    }\r\n}\r\nexport default EventForm;"]},"metadata":{},"sourceType":"module"}